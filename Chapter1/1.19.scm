(define (fib n)(fib-iter 1 0 0 1 n))(define (fib-iter a b p q count)  (cond ((= count 0) b)    ((even? count)    (fib-iter a                b                (+ (* p p) (* q q))                (+ (* 2 p q) (* q q))                (/ count 2)))    (else (fib-iter (+ (* b q) (* a q) (* a p))                    (+ (* b p) (* a q))                    p                    q                    (- count 1)))));; a1 = bq + aq + ap;; b1 = bp + aq;; a2 = b1q + a1q + a1p;; b2 = b1p + a1q;; p' = p*p + q*q;; q' = 2pq + q*q(fib 0)(fib 1)(fib 2)(fib 3)(fib 4)(fib 5)(fib 6)(fib 7)(fib 8)(fib 9)(fib 10)(fib 0)  0(fib 1)  1(fib 2)  1(fib 3)  2(fib 4)  3(fib 5)  5(fib 6)  8(fib 7)  13(fib 8)  21(fib 9)  34(fib 10)  55